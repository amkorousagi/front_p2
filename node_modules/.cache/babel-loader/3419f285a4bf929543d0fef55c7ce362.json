{"ast":null,"code":"var _jsxFileName = \"/home/psc/react-template/react-material-dashboard/src/views/settings/SettingsView/Notifications.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, Divider, FormControlLabel, Grid, Typography, makeStyles, TextField } from '@material-ui/core';\nconst useStyles = makeStyles({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nconst Notifications = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    factor1: '',\n    factor2: '',\n    factor3: '',\n    factor4: ''\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n    console.log(event.target.value); //db connect\n  };\n\n  const update = () => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"Manage the factors' weight\",\n    title: \"The factors' weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    wrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"fill boxes\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"factor1\",\n    margin: \"normal\",\n    name: \"factor1\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.factor1,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"factor2\",\n    margin: \"normal\",\n    name: \"factor2\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.factor2,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"factor3\",\n    margin: \"normal\",\n    name: \"factor3\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.factor3,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"factor4\",\n    margin: \"normal\",\n    name: \"factor4\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.factor4,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: update,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"update\"))));\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\nexport default Notifications;","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/src/views/settings/SettingsView/Notifications.js"],"names":["React","useState","PropTypes","clsx","Box","Button","Card","CardContent","CardHeader","Checkbox","Divider","FormControlLabel","Grid","Typography","makeStyles","TextField","useStyles","root","item","display","flexDirection","Notifications","className","rest","classes","values","setValues","factor1","factor2","factor3","factor4","handleChange","event","target","name","value","console","log","update","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,OAPF,EAQEC,gBARF,EASEC,IATF,EAUEC,UAVF,EAWEC,UAXF,EAYEC,SAZF,QAaO,mBAbP;AAeA,MAAMC,SAAS,GAAGF,UAAU,CAAE;AAC5BG,EAAAA,IAAI,EAAE,EADsB;AAE5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE;AAFX;AAFsB,CAAF,CAA5B;;AAQA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAChD,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC;AACnC0B,IAAAA,OAAO,EAAE,EAD0B;AAEnCC,IAAAA,OAAO,EAAE,EAF0B;AAGnCC,IAAAA,OAAO,EAAE,EAH0B;AAInCC,IAAAA,OAAO,EAAE;AAJ0B,GAAD,CAApC;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BN,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACO,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAN,CAAaE,KAAzB,EAL8B,CAM9B;AACD,GAPD;;AAQA,QAAMG,MAAM,GAAG,MAAM;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAEtB,IAAI,CAACqB,OAAO,CAACP,IAAT,EAAeK,SAAf;AADjB,KAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,KAAK,EAAC,qBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEC,OAAO,CAACN,IADrB;AAEE,IAAA,IAAI,MAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,EAAE,EAAE,EALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,YAAY,MAFd;AAGE,IAAA,OAAO,EAAC,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAsBE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,QAAQ,EAAEa,YALZ;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,KAAK,EAAEN,MAAM,CAACE,OAPhB;AAQE,IAAA,OAAO,EAAC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eAgCI,oBAAC,SAAD;AACA,IAAA,SAAS,MADT;AAEA,IAAA,KAAK,EAAC,SAFN;AAGA,IAAA,MAAM,EAAC,QAHP;AAIA,IAAA,IAAI,EAAC,SAJL;AAKA,IAAA,QAAQ,EAAEI,YALV;AAMA,IAAA,IAAI,EAAC,UANL;AAOA,IAAA,KAAK,EAAEN,MAAM,CAACG,OAPd;AAQA,IAAA,OAAO,EAAC,UARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,eA0CI,oBAAC,SAAD;AACA,IAAA,SAAS,MADT;AAEA,IAAA,KAAK,EAAC,SAFN;AAGA,IAAA,MAAM,EAAC,QAHP;AAIA,IAAA,IAAI,EAAC,SAJL;AAKA,IAAA,QAAQ,EAAEG,YALV;AAMA,IAAA,IAAI,EAAC,UANL;AAOA,IAAA,KAAK,EAAEN,MAAM,CAACI,OAPd;AAQA,IAAA,OAAO,EAAC,UARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CJ,eAoDI,oBAAC,SAAD;AACA,IAAA,SAAS,MADT;AAEA,IAAA,KAAK,EAAC,SAFN;AAGA,IAAA,MAAM,EAAC,QAHP;AAIA,IAAA,IAAI,EAAC,SAJL;AAKA,IAAA,QAAQ,EAAEE,YALV;AAMA,IAAA,IAAI,EAAC,UANL;AAOA,IAAA,KAAK,EAAEN,MAAM,CAACK,OAPd;AAQA,IAAA,OAAO,EAAC,UARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDJ,CALF,CADF,CANF,eAgIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhIF,eAiIE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,cAAc,EAAC,UAFjB;AAGE,IAAA,CAAC,EAAE,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAEQ,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAjIF,CAJF,CADF;AAsJD,CA1KD;;AA4KAjB,aAAa,CAACkB,SAAd,GAA0B;AACxBjB,EAAAA,SAAS,EAAEpB,SAAS,CAACsC;AADG,CAA1B;AAIA,eAAenB,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    factor1: '',\n    factor2: '',\n    factor3: '',\n    factor4: ''\n  });\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n    console.log(event.target.value)\n    //db connect\n  };\n  const update = () => {\n    console.log(values)\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the factors' weight\"\n          title=\"The factors' weight\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                fill boxes\n              </Typography>\n              {/*\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n                */}\n              <TextField\n                fullWidth\n                label=\"factor1\"\n                margin=\"normal\"\n                name=\"factor1\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.factor1}\n                variant=\"outlined\"\n              />\n                <TextField\n                fullWidth\n                label=\"factor2\"\n                margin=\"normal\"\n                name=\"factor2\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.factor2}\n                variant=\"outlined\"\n              />\n                <TextField\n                fullWidth\n                label=\"factor3\"\n                margin=\"normal\"\n                name=\"factor3\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.factor3}\n                variant=\"outlined\"\n              />\n                <TextField\n                fullWidth\n                label=\"factor4\"\n                margin=\"normal\"\n                name=\"factor4\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.factor4}\n                variant=\"outlined\"\n              />\n              {/*\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n                */}\n            </Grid>\n            {/*\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n                */}\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={update}\n          >\n            update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}